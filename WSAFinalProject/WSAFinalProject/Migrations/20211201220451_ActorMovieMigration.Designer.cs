// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WSAFinalProject.Models;

namespace WSAFinalProject.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20211201220451_ActorMovieMigration")]
    partial class ActorMovieMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WSAFinalProject.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CastId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorId");

                    b.HasIndex("CastId");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            BirthYear = "1961",
                            Name = "Laurence Fishburne"
                        },
                        new
                        {
                            ActorId = 2,
                            BirthYear = "1947",
                            Name = "Sam Neil"
                        },
                        new
                        {
                            ActorId = 3,
                            BirthYear = "1954",
                            Name = "Kathleen Quinlan"
                        },
                        new
                        {
                            ActorId = 4,
                            BirthYear = "1967",
                            Name = "Laura Dern"
                        },
                        new
                        {
                            ActorId = 5,
                            BirthYear = "1952",
                            Name = "Jeff Goldblum"
                        });
                });

            modelBuilder.Entity("WSAFinalProject.Models.ActorMovie", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("ActorMovies");
                });

            modelBuilder.Entity("WSAFinalProject.Models.Cast", b =>
                {
                    b.Property<int>("CastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CastId");

                    b.ToTable("Casts");

                    b.HasData(
                        new
                        {
                            CastId = 1
                        },
                        new
                        {
                            CastId = 2
                        });
                });

            modelBuilder.Entity("WSAFinalProject.Models.Description", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DescriptionId");

                    b.ToTable("Descriptions");

                    b.HasData(
                        new
                        {
                            DescriptionId = 1,
                            DescriptionText = "A rescue crew investigates a spaceship that disappeared into a black hole and has now returned....with osmeone or something new on-board"
                        },
                        new
                        {
                            DescriptionId = 2,
                            DescriptionText = "A pragmatic paleontologist touring an almost complete theme park on an island in Central America is tasked with protecting a couple of kids after a power failure causes the park's cloned dinosaurs to run loose."
                        });
                });

            modelBuilder.Entity("WSAFinalProject.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Horror"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Comedy"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "RomCom"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = 7,
                            Name = "SuperHero"
                        },
                        new
                        {
                            GenreId = 8,
                            Name = "Musical"
                        },
                        new
                        {
                            GenreId = 9,
                            Name = "Documentary"
                        });
                });

            modelBuilder.Entity("WSAFinalProject.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CastId")
                        .HasColumnType("int");

                    b.Property<int>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.HasIndex("CastId")
                        .IsUnique();

                    b.HasIndex("DescriptionId")
                        .IsUnique();

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CastId = 1,
                            DescriptionId = 1,
                            Duration = 96,
                            GenreId = 2,
                            Name = "Event Horizon",
                            Year = 1997
                        },
                        new
                        {
                            MovieId = 2,
                            CastId = 2,
                            DescriptionId = 2,
                            Duration = 127,
                            GenreId = 2,
                            Name = "Jurassic Park",
                            Year = 1993
                        });
                });

            modelBuilder.Entity("WSAFinalProject.Models.Actor", b =>
                {
                    b.HasOne("WSAFinalProject.Models.Cast", null)
                        .WithMany("Actors")
                        .HasForeignKey("CastId");
                });

            modelBuilder.Entity("WSAFinalProject.Models.ActorMovie", b =>
                {
                    b.HasOne("WSAFinalProject.Models.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WSAFinalProject.Models.Movie", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WSAFinalProject.Models.Movie", b =>
                {
                    b.HasOne("WSAFinalProject.Models.Cast", "Cast")
                        .WithOne("Movie")
                        .HasForeignKey("WSAFinalProject.Models.Movie", "CastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WSAFinalProject.Models.Description", "Description")
                        .WithOne("Movie")
                        .HasForeignKey("WSAFinalProject.Models.Movie", "DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WSAFinalProject.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
